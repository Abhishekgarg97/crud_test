const React = require("react");

const {
  Box
} = require("ink");

const SelectInput = require("ink-select-input").default;

const open = require("open");

const handleSelect = item => {
  if (item.url) {
    open(item.url);
  } else if (item.action) {
    item.action();
  }
};

const createList = items => {
  return items.map(item => {
    return { ...item,
      key: item.label || item.url
    };
  });
};

const listItems = createList([{
  label: "Website 🌎",
  url: "https://blog.abhisheknaidu.tech"
}, {
  label: "GitHub 🦄",
  url: "https://github.com/abhisheknaiidu"
}, {
  label: "Twitter 👀",
  url: "https://twitter.com/abhisheknaiidu"
}, {
  label: "Linkedin 💼",
  url: "http://linkedin.com/in/abhisheknaiidu/"
}, {
  label: "Blog ✍",
  url: "https://blog.abhisheknaidu.tech"
}, {
  label: "Contact ✉️",
  url: "mailto:2018057@iiitdmj.ac.in"
}, {
  label: "Support my open source work ❤️",
  url: "https://www.buymeacoffee.com/abhisheknaiidu"
}, {
  label: "---------"
}, {
  label: "Quit",

  action() {
    process.exit();
  }

}]);

const renderResume = () => {
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, {
    marginBottom: 1
  }), /*#__PURE__*/React.createElement(SelectInput, {
    items: listItems,
    onSelect: handleSelect
  })));
};

module.exports = renderResume;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsIkJveCIsIlNlbGVjdElucHV0IiwiZGVmYXVsdCIsIm9wZW4iLCJoYW5kbGVTZWxlY3QiLCJpdGVtIiwidXJsIiwiYWN0aW9uIiwiY3JlYXRlTGlzdCIsIml0ZW1zIiwibWFwIiwia2V5IiwibGFiZWwiLCJsaXN0SXRlbXMiLCJwcm9jZXNzIiwiZXhpdCIsInJlbmRlclJlc3VtZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQVVELE9BQU8sQ0FBQyxLQUFELENBQXZCOztBQUNBLE1BQU1FLFdBQVcsR0FBR0YsT0FBTyxDQUFDLGtCQUFELENBQVAsQ0FBNEJHLE9BQWhEOztBQUNBLE1BQU1DLElBQUksR0FBR0osT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBRUEsTUFBTUssWUFBWSxHQUFJQyxJQUFELElBQVU7QUFDN0IsTUFBSUEsSUFBSSxDQUFDQyxHQUFULEVBQWM7QUFDWkgsSUFBQUEsSUFBSSxDQUFDRSxJQUFJLENBQUNDLEdBQU4sQ0FBSjtBQUNELEdBRkQsTUFFTyxJQUFJRCxJQUFJLENBQUNFLE1BQVQsRUFBaUI7QUFDdEJGLElBQUFBLElBQUksQ0FBQ0UsTUFBTDtBQUNEO0FBQ0YsQ0FORDs7QUFRQSxNQUFNQyxVQUFVLEdBQUlDLEtBQUQsSUFBVztBQUM1QixTQUFPQSxLQUFLLENBQUNDLEdBQU4sQ0FBV0wsSUFBRCxJQUFVO0FBQ3pCLFdBQU8sRUFBRSxHQUFHQSxJQUFMO0FBQVdNLE1BQUFBLEdBQUcsRUFBRU4sSUFBSSxDQUFDTyxLQUFMLElBQWNQLElBQUksQ0FBQ0M7QUFBbkMsS0FBUDtBQUNELEdBRk0sQ0FBUDtBQUdELENBSkQ7O0FBTUEsTUFBTU8sU0FBUyxHQUFHTCxVQUFVLENBQUMsQ0FDM0I7QUFDRUksRUFBQUEsS0FBSyxFQUFFLFlBRFQ7QUFFRU4sRUFBQUEsR0FBRyxFQUFFO0FBRlAsQ0FEMkIsRUFLM0I7QUFDRU0sRUFBQUEsS0FBSyxFQUFFLFdBRFQ7QUFFRU4sRUFBQUEsR0FBRyxFQUFFO0FBRlAsQ0FMMkIsRUFTM0I7QUFDRU0sRUFBQUEsS0FBSyxFQUFFLFlBRFQ7QUFFRU4sRUFBQUEsR0FBRyxFQUFFO0FBRlAsQ0FUMkIsRUFhM0I7QUFDRU0sRUFBQUEsS0FBSyxFQUFFLGFBRFQ7QUFFRU4sRUFBQUEsR0FBRyxFQUFFO0FBRlAsQ0FiMkIsRUFpQjNCO0FBQ0VNLEVBQUFBLEtBQUssRUFBRSxRQURUO0FBRUVOLEVBQUFBLEdBQUcsRUFBRTtBQUZQLENBakIyQixFQXFCM0I7QUFDRU0sRUFBQUEsS0FBSyxFQUFFLFlBRFQ7QUFFRU4sRUFBQUEsR0FBRyxFQUFFO0FBRlAsQ0FyQjJCLEVBeUIzQjtBQUNFTSxFQUFBQSxLQUFLLEVBQUUsZ0NBRFQ7QUFFRU4sRUFBQUEsR0FBRyxFQUFFO0FBRlAsQ0F6QjJCLEVBNkIzQjtBQUNFTSxFQUFBQSxLQUFLLEVBQUU7QUFEVCxDQTdCMkIsRUFnQzNCO0FBQ0VBLEVBQUFBLEtBQUssRUFBRSxNQURUOztBQUVFTCxFQUFBQSxNQUFNLEdBQUc7QUFDUE8sSUFBQUEsT0FBTyxDQUFDQyxJQUFSO0FBQ0Q7O0FBSkgsQ0FoQzJCLENBQUQsQ0FBNUI7O0FBd0NBLE1BQU1DLFlBQVksR0FBRyxNQUFNO0FBQ3pCLHNCQUNFLHVEQUNFLG9CQUFDLEdBQUQ7QUFBSyxJQUFBLGFBQWEsRUFBQztBQUFuQixrQkFDRSxvQkFBQyxHQUFEO0FBQUssSUFBQSxZQUFZLEVBQUU7QUFBbkIsSUFERixlQUVFLG9CQUFDLFdBQUQ7QUFBYSxJQUFBLEtBQUssRUFBRUgsU0FBcEI7QUFBK0IsSUFBQSxRQUFRLEVBQUVUO0FBQXpDLElBRkYsQ0FERixDQURGO0FBUUQsQ0FURDs7QUFXQWEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCRixZQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgeyBCb3ggfSA9IHJlcXVpcmUoXCJpbmtcIik7XG5jb25zdCBTZWxlY3RJbnB1dCA9IHJlcXVpcmUoXCJpbmstc2VsZWN0LWlucHV0XCIpLmRlZmF1bHQ7XG5jb25zdCBvcGVuID0gcmVxdWlyZShcIm9wZW5cIik7XG5cbmNvbnN0IGhhbmRsZVNlbGVjdCA9IChpdGVtKSA9PiB7XG4gIGlmIChpdGVtLnVybCkge1xuICAgIG9wZW4oaXRlbS51cmwpO1xuICB9IGVsc2UgaWYgKGl0ZW0uYWN0aW9uKSB7XG4gICAgaXRlbS5hY3Rpb24oKTtcbiAgfVxufTtcblxuY29uc3QgY3JlYXRlTGlzdCA9IChpdGVtcykgPT4ge1xuICByZXR1cm4gaXRlbXMubWFwKChpdGVtKSA9PiB7XG4gICAgcmV0dXJuIHsgLi4uaXRlbSwga2V5OiBpdGVtLmxhYmVsIHx8IGl0ZW0udXJsIH07XG4gIH0pO1xufTtcblxuY29uc3QgbGlzdEl0ZW1zID0gY3JlYXRlTGlzdChbXG4gIHtcbiAgICBsYWJlbDogXCJXZWJzaXRlIPCfjI5cIixcbiAgICB1cmw6IFwiaHR0cHM6Ly9ibG9nLmFiaGlzaGVrbmFpZHUudGVjaFwiLFxuICB9LFxuICB7XG4gICAgbGFiZWw6IFwiR2l0SHViIPCfpoRcIixcbiAgICB1cmw6IFwiaHR0cHM6Ly9naXRodWIuY29tL2FiaGlzaGVrbmFpaWR1XCIsXG4gIH0sXG4gIHtcbiAgICBsYWJlbDogXCJUd2l0dGVyIPCfkYBcIixcbiAgICB1cmw6IFwiaHR0cHM6Ly90d2l0dGVyLmNvbS9hYmhpc2hla25haWlkdVwiLFxuICB9LFxuICB7XG4gICAgbGFiZWw6IFwiTGlua2VkaW4g8J+SvFwiLFxuICAgIHVybDogXCJodHRwOi8vbGlua2VkaW4uY29tL2luL2FiaGlzaGVrbmFpaWR1L1wiLFxuICB9LFxuICB7XG4gICAgbGFiZWw6IFwiQmxvZyDinI1cIixcbiAgICB1cmw6IFwiaHR0cHM6Ly9ibG9nLmFiaGlzaGVrbmFpZHUudGVjaFwiLFxuICB9LFxuICB7XG4gICAgbGFiZWw6IFwiQ29udGFjdCDinInvuI9cIixcbiAgICB1cmw6IFwibWFpbHRvOjIwMTgwNTdAaWlpdGRtai5hYy5pblwiLFxuICB9LFxuICB7XG4gICAgbGFiZWw6IFwiU3VwcG9ydCBteSBvcGVuIHNvdXJjZSB3b3JrIOKdpO+4j1wiLFxuICAgIHVybDogXCJodHRwczovL3d3dy5idXltZWFjb2ZmZWUuY29tL2FiaGlzaGVrbmFpaWR1XCIsXG4gIH0sXG4gIHtcbiAgICBsYWJlbDogXCItLS0tLS0tLS1cIixcbiAgfSxcbiAge1xuICAgIGxhYmVsOiBcIlF1aXRcIixcbiAgICBhY3Rpb24oKSB7XG4gICAgICBwcm9jZXNzLmV4aXQoKTtcbiAgICB9LFxuICB9LFxuXSk7XG5cbmNvbnN0IHJlbmRlclJlc3VtZSA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEJveCBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCI+XG4gICAgICAgIDxCb3ggbWFyZ2luQm90dG9tPXsxfSAvPlxuICAgICAgICA8U2VsZWN0SW5wdXQgaXRlbXM9e2xpc3RJdGVtc30gb25TZWxlY3Q9e2hhbmRsZVNlbGVjdH0gLz5cbiAgICAgIDwvQm94PlxuICAgIDwvPlxuICApO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSByZW5kZXJSZXN1bWU7XG4iXX0=